#BlueJ class context
comment0.target=Curso
comment0.text=\n\ Representa\ un\ curso\ (materia)\ de\ una\ carrera\ universitaria.\n\ Los\ estudiantes\ est\u00E1n\ organizdos\ en\ comisiones,\ cada\ comisi\u00F3n\ en\n\ una\ lista\ diferente.\n
comment1.params=nombre\ esObligatoria
comment1.target=Curso(java.lang.String,\ boolean)
comment1.text=\n\ Constructor\ de\ la\ clase\ Curso.\ Crea\ un\ nuevo\ curso\ con\ su\ nombre\ y\ si\ es\ obligatoria,\n\ con\ ambas\ comisiones\ de\ estudiantes\ vac\u00EDas.\n
comment2.params=estudiante\ comision
comment2.target=void\ inscribirEstudiante(Estudiante,\ int)
comment2.text=\n\ Agrega\ un\ estudiante\ al\ curso,\ en\ una\ comisi\u00F3n\ determinada\n\ @param\ estudiante\ es\ el\ estudiante\ a\ agregar\n\ @param\ comision\ es\ la\ comisi\u00F3n\ en\ la\ cual\ agregar\ el\ estudiante.\n\ Precondici\u00F3n\:\ el\ estudiante\ no\ debe\ ser\ null.\n\ Precondici\u00F3n\:\ no\ debe\ existir\ en\ ninguna\ de\ las\ comisiones\ un\ estudiante\ con\ el\ mismo\ id.\n\ Precondici\u00F3n\:\ la\ comisi\u00F3n\ debe\ ser\ 1\ o\ 2.\n
comment3.params=
comment3.target=java.util.HashSet\ obtenerApellidosAspirantes()
comment3.text=\n\ Retorna\ el\ conjunto\ de\ apellidos\ de\ alumnos\ aspirantes\ (no\ regulares)\ del\ curso\n\ @return\ el\ conjunto\ de\ apellidos\ de\ estudiantes\ del\ curso\ (ambas\ comisiones)\n
comment4.params=
comment4.target=boolean\ repOK()
comment4.text=\n\ Invariante\ de\ representacion\ de\ la\ clase.\ \n\ La\ clase\ es\ internamente\ consistente\ si\:\n\ -\ el\ nombre\ de\ la\ materia\ es\ no\ nulo\ y\ no\ vacio.\n\ -\ las\ listas\ de\ las\ comisiones\ no\ tienen\ alumnos\ en\ comun\n\ -\ las\ listas\ de\ las\ comisiones\ no\ tienen\ alumnos\ con\ ids\ repetidos\n\ -\ las\ listas\ de\ las\ comisiones\ no\ contienen\ objetos\ nulos\n
numComments=5
